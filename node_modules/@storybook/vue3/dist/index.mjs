import { entry_preview_exports, renderToCanvas } from './chunk-IBPFZ7LW.mjs';
export { setup } from './chunk-IBPFZ7LW.mjs';
import './chunk-CEH6MNVV.mjs';
import { global } from '@storybook/global';
import { setDefaultProjectAnnotations, setProjectAnnotations as setProjectAnnotations$1, composeStory as composeStory$1, composeStories as composeStories$1 } from 'storybook/internal/preview-api';
import { h } from 'vue';

var{window:globalWindow}=global;globalWindow.STORYBOOK_ENV="vue3";globalWindow.PLUGINS_SETUP_FUNCTIONS||=new Set;function setProjectAnnotations(projectAnnotations){return setDefaultProjectAnnotations(vueProjectAnnotations),setProjectAnnotations$1(projectAnnotations)}var vueProjectAnnotations={...entry_preview_exports,renderToCanvas:(renderContext,canvasElement)=>{if(renderContext.storyContext.testingLibraryRender==null)return renderToCanvas(renderContext,canvasElement);let{storyFn,storyContext:{testingLibraryRender:render}}=renderContext,{unmount}=render(storyFn(),{container:canvasElement});return unmount}};function composeStory(story,componentAnnotations,projectAnnotations,exportsName){let composedStory=composeStory$1(story,componentAnnotations,projectAnnotations,vueProjectAnnotations,exportsName),renderable=(...args)=>h(composedStory(...args));return Object.assign(renderable,composedStory),renderable}function composeStories(csfExports,projectAnnotations){return composeStories$1(csfExports,projectAnnotations,composeStory)}try{module?.hot?.decline&&module.hot.decline();}catch{}

export { composeStories, composeStory, setProjectAnnotations, vueProjectAnnotations };
